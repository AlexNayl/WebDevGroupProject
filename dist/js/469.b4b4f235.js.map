{"version":3,"file":"js/469.b4b4f235.js","mappings":"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","sources":["webpack://webdevgroupproject/./src/views/SnakeView.vue","webpack://webdevgroupproject/./src/components/SnakeGame.vue","webpack://webdevgroupproject/./public/scripts/snake.js","webpack://webdevgroupproject/./src/components/SnakeGame.vue?4a62","webpack://webdevgroupproject/./src/views/SnakeView.vue?32a6"],"sourcesContent":["<template>\n    <div class=\"SnakeView\">\n        <h1>Snake</h1>\n        <SnakeGame />\n    </div>\n</template>\n\n<script>\n    import SnakeGame from '@/components/SnakeGame.vue'\n    export default {\n        name: \"SnakeView\",\n        title: \"Snake Game\",\n        components: {\n            SnakeGame,\n        },\n    }\n</script>","<template>\n    <p v-if=\"running\">Score {{ score }}</p>\n\t<p v-if=\"!running\">Press WASD or the Arrow Keys to begin</p>\n    <div id=\"snakeDiv\"></div>\n</template>\n\n<script>\n\timport Snake from \"@/../public/scripts/snake.js\";\n\n    export default {\n        name: \"SnakeGame\",\n        data() {\n            return {\n                game: null,\n                p5Context: null,\n\t\t\t\tscore: 0,\n\t\t\t\trunning: false,\n            }\n        },\n        methods: {\n            startup() {\n                this.game = new Snake(this);\n            }\n        },\n        mounted(){\n            // Call Start Up Code\n            this.$nextTick(() => {\n                this.startup();\n            })\n        },\n    }\n</script>","import p5 from \"p5\";\nimport accessHighscores from '@/../public/scripts/access_highscores.js';\n/*\n * Class Name: Snake\n * Description: Snake Game\n*/\nexport default class Snake {\n\t/*\n     * Name: constructor\n     * Description: Creates an instance of the Snake Game\n     * Return: None\n    */\n\tconstructor(vuePage) {\n\t\tthis.vuePage = vuePage;\n\t\tthis.setup(30, 20, 25);\n\t}\n\n\t/*\n     * Name: placeFood\n     * Description: Places a piece of food in the game\n     * Return: None\n    */\n\tplaceFood() {\n\t\t// If snake is maximum size then don't place any food\n\t\tif (this.tail.length + 1 == this.width * this.height){ return; }\n\t\tdo {\n\t\t\tthis.foodx = Math.floor(Math.random() * this.width);\n\t\t\tthis.foody = Math.floor(Math.random() * this.height);\n\t\t} while ((this.x == this.foodx && this.y == this.foody) || this.isCoordInTail(this.x, this.y));\n\t\t// Keeps picking random locations which are not occupied by the snake\n\t\t//console.log(\"Placed food at \", this.foodx, \", \", this.foody);\n\t}\n\n\t/*\n     * Name: addFood\n     * Description: The snake consumes food\n     * Return: None\n    */\n\taddFood() {\n\t\tthis.food += 5;\n\t\tthis.vuePage.score += 5;\n\t}\n\n\t/*\n     * Name: isCoordInTail\n     * Description: Checks if a coordinate is within the Snake's tail\n     * Return: True if it is, otherwise false\n    */\n\tisCoordInTail(x, y) {\n\t\tfor (let coord of this.tail) {\n\t\t\tif (coord[0] == x && coord[1] == y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/*\n     * Name: reset\n     * Description: Resets the game\n     * Return: None\n    */\n\treset() {\n\t\tthis.running = false;\n\t\tthis.vuePage.running = false;\n\t\tif (this.vuePage.score > 0) {\n\t\t\taccessHighscores.updateHighscores(this.vuePage.score, prompt(\"Enter a name:\"), \"snake\");\n\t\t}\n\t\tthis.tail = [];\n\t\tthis.x = Math.floor(this.width / 2);\n\t\tthis.y = Math.floor(this.height / 2);\n\t\tthis.food = 10;\n\t\tthis.direction = 0;\n\t\tthis.vuePage.score = 0\n\t\tthis.placeFood();\n\t}\n\n\t/*\n     * Name: setup\n     * Description: Sets up the snake game\n     * Return: None\n     * More:\n     width and height are number of cells, not pixels\n\t cellSize is the number of pixels per cell\n    */\n\tsetup(width, height, cellSize) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.cellSize = cellSize;\n\t\tthis.x = Math.floor(width / 2);\n\t\tthis.y = Math.floor(height / 2);\n\t\tthis.tail = [];\n\t\tthis.food = 10;\n\t\tthis.foodx = 0;\n\t\tthis.foody = 0;\n\t\tthis.direction = 0; // 0: Right, 1: Down, 2: Left, 3: Up\n\t\tthis.lastDirection = this.direction;\n\t\tthis.vuePage.score = 0;\n\t\tthis.running = false;\n\t\tthis.vuePage.running = false;\n\n\t\tconst sketch = (s) => {\n\t\t\ts.setup = () => {\n\t\t\t\tlet c = s.createCanvas(width * cellSize, height * cellSize);\n\t\t\t\ts.frameRate(10);\n\t\t\t\tc.parent(\"snakeDiv\");\n\t\t\t\tthis.placeFood();\n\t\t\t}\n\n\t\t\ts.draw = () => {\n\t\t\t\t// Update\n\t\t\t\tif (this.running) {\n\t\t\t\t\tthis.lastDirection = this.direction;\n\t\t\t\t\t// Movement\n\t\t\t\t\tif (this.direction == 0) {\n\t\t\t\t\t\t// Right\n\t\t\t\t\t\tthis.x++;\n\t\t\t\t\t\tif (this.x >= width) {\n\t\t\t\t\t\t\tthis.x = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.direction == 1) {\n\t\t\t\t\t\t// Down\n\t\t\t\t\t\tthis.y++;\n\t\t\t\t\t\tif (this.y >= height) {\n\t\t\t\t\t\t\tthis.y = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.direction == 2) {\n\t\t\t\t\t\t// Left\n\t\t\t\t\t\tthis.x--;\n\t\t\t\t\t\tif (this.x < 0) {\n\t\t\t\t\t\t\tthis.x = width - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.direction == 3) {\n\t\t\t\t\t\t// Up\n\t\t\t\t\t\tthis.y--;\n\t\t\t\t\t\tif (this.y < 0) {\n\t\t\t\t\t\t\tthis.y = height - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Collision check\n\t\t\t\t\tif (this.isCoordInTail(this.x, this.y)) {\n\t\t\t\t\t\t// Hit the tail, game over\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Food check\n\t\t\t\t\tif (this.x == this.foodx && this.y == this.foody) {\n\t\t\t\t\t\tthis.addFood();\n\t\t\t\t\t\tthis.placeFood();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Tail\n\t\t\t\t\tthis.tail.unshift([this.x, this.y]);\n\t\t\t\t\tif (this.food <= 0) {\n\t\t\t\t\t\tthis.tail.pop();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.food--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Border\n\t\t\t\ts.clear();\n\t\t\t\ts.fill(255, 255, 255);\n\t\t\t\ts.stroke(0, 0, 0);\n\t\t\t\ts.rect(0, 0, width * cellSize, height * cellSize);\n\t\t\t\t\n\t\t\t\t// Draw snake\n\t\t\t\ts.fill(255, 0, 0);\n\t\t\t\ts.noStroke();\n\t\t\t\ts.square(this.x * cellSize, this.y * cellSize, cellSize);\n\t\t\t\t// Tail\n\t\t\t\tfor (let coord of this.tail) {\n\t\t\t\t\ts.square(coord[0] * cellSize, coord[1] * cellSize, cellSize);\n\t\t\t\t}\n\n\t\t\t\t// Draw food\n\t\t\t\ts.fill(0, 255, 0);\n\t\t\t\ts.square(this.foodx * cellSize, this.foody * cellSize, cellSize);\n\t\t\t}\n\n\t\t\ts.keyPressed = (e) => {\n\t\t\t\tlet key = e.key;\n\n\t\t\t\tconsole.log(\"key press\", key);\n\t\t\t\t// Check movement direction\n\t\t\t\tif ((key == \"d\" || key == \"ArrowRight\") && this.lastDirection != 2) {\n\t\t\t\t\tthis.direction = 0;\n\t\t\t\t} else if ((key == \"s\" || key == \"ArrowDown\") && this.lastDirection != 3) {\n\t\t\t\t\tthis.direction = 1;\n\t\t\t\t} else if ((key == \"a\" || key == \"ArrowLeft\") && this.lastDirection != 0) {\n\t\t\t\t\tthis.direction = 2;\n\t\t\t\t} else if ((key == \"w\" || key == \"ArrowUp\") && this.lastDirection != 1) {\n\t\t\t\t\tthis.direction = 3;\n\t\t\t\t}\n\n\t\t\t\t// Start the game\n\t\t\t\tif ((key == \"w\" || key == \"a\" || key == \"s\" || key == \"d\" || key == \"ArrowRight\" || key == \"ArrowDown\" || key == \"ArrowLeft\" || key == \"ArrowUp\") && !this.running) {\n\t\t\t\t\tthis.running = true;\n\t\t\t\t\tthis.vuePage.running = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.sketch = new p5(sketch);\n\t}\n}","import { render } from \"./SnakeGame.vue?vue&type=template&id=a2263a52\"\nimport script from \"./SnakeGame.vue?vue&type=script&lang=js\"\nexport * from \"./SnakeGame.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/School/WebDevGroupProject/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SnakeView.vue?vue&type=template&id=18fbecf0\"\nimport script from \"./SnakeView.vue?vue&type=script&lang=js\"\nexport * from \"./SnakeView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/d/School/WebDevGroupProject/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_createVNode","_component_SnakeGame","id","$data","_hoisted_1","_toDisplayString","_hoisted_3","Snake","constructor","vuePage","this","setup","placeFood","tail","length","width","height","foodx","Math","floor","random","foody","x","y","isCoordInTail","addFood","food","score","coord","reset","running","accessHighscores","prompt","direction","cellSize","lastDirection","sketch","s","c","createCanvas","frameRate","parent","draw","unshift","pop","clear","fill","stroke","rect","noStroke","square","keyPressed","e","key","console","log","p5","name","data","game","p5Context","methods","startup","mounted","$nextTick","__exports__","title","components","SnakeGame","render"],"sourceRoot":""}